name: Build and publish a Docker image to ghcr.io
on:
  push:
  pull_request:

jobs:
  build:
    name: Build Binary
    runs-on: "ubuntu-20.04"
    strategy:
      matrix:
        arch: [arm64, amd64]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: '1.18'
          cache: true

      - name: Build
        run: CGO_ENABLED=0 GOOS=linux GOARCH=${{ matrix.arch }} go build -ldflags "-X main.Version=${{ github.sha }}" -o missing-container-metrics-${{ matrix.arch }}-linux

      - uses: actions/upload-artifact@v3
        with:
          name: missing-container-metrics-${{ matrix.arch }}-linux
          path: missing-container-metrics-${{ matrix.arch }}-linux

  docker_publish:
    name: Docker Build and Push
    runs-on: "ubuntu-20.04"
    if: ${{ github.event_name != 'pull_request' }}
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download binaries
        uses: actions/download-artifact@v3

      - name: Fix binary permissions
        run: chmod 755 missing-container-metrics-*-linux && ls -R

      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: |
            linux/amd64
            linux/arm64
